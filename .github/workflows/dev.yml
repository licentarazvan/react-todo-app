name: dev

on:
  push:
    branches:
      - master

jobs:
  build-dev:
    name: Build app dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Packages
        run:
          npm install
      - name: Build application
        run:
          npm run build
      - uses: actions/cache@v2
        id: save-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Read app version
        run: |
          app_version=$(cat package.json | jq -r '.version'); echo "export app_version=$app_version" >> $GITHUB_ENV
      - name: print app version
        run:
          echo $app_version
      - uses: actions-ecosystem/action-push-tag@v1
        if: ${{ ! contains(env.app_version, 'dev') }}
        with:
          tag: ${{ env.app_version }}
          message: "Release ${{ env.app_version }}"
  deploy-dev:
    name: Deploy app dev
    runs-on: ubuntu-latest
    needs: build-dev
    environment: dev
    env:
        DEV_CLOUDFRONT_ID: ${{ secrets.DEV_CLOUDFRONT_ID }}
        DEV_S3_BUCKET: ${{ secrets.DEV_S3_BUCKET }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Configure AWS Cloudfront
        run:
          aws configure set preview.cloudfront true
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Deploy app
        run:
          npm run deploy-dev
      - name: Invalidate cache
        run:
          npm run invalidate-cache-dev
