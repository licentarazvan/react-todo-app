name: release

on:
  push:
    tags:
    - 'v*'

jobs:
  build-release:
    name: Build app release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Packages
        run:
          npm install
      - name: Build application
        run:
          npm run build
      - uses: actions/cache@v2
        id: save-build
        with:
          path: ./*
          key: ${{ github.sha }}
  push-release:
    name: Push release artifact
    runs-on: ubuntu-latest
    needs: build-release
    environment: staging
    env:
        S3_BUILDS_BUCKET: ${{ secrets.S3_BUILDS_BUCKET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Read app version
        run: |
          app_version=$(cat package.json | jq -r '.version'); echo "export app_version=$app_version" >> $GITHUB_ENV
      - name: Create artifact
        run:
          zip -r $app_version.zip ./build
      - name: Push artifact
        run:
          aws s3 cp $app_version.zip s3://$S3_BUILDS_BUCKET
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-{{ env.app_version }}.zip
          path: {{ env.app_version}}.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./{{ env.app_version }}.zip
          asset_name: app-{{ env.app_version }}.zip
          asset_content_type: application/zip
